// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.1
// source: ldlm.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorCode int32

const (
	ErrorCode_Unknown                      ErrorCode = 0
	ErrorCode_LockDoesNotExist             ErrorCode = 1
	ErrorCode_InvalidLockKey               ErrorCode = 2
	ErrorCode_LockWaitTimeout              ErrorCode = 3
	ErrorCode_NotLocked                    ErrorCode = 4
	ErrorCode_LockDoesNotExistOrInvalidKey ErrorCode = 5
	ErrorCode_LockSizeMismatch             ErrorCode = 6
	ErrorCode_InvalidLockSize              ErrorCode = 7
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0: "Unknown",
		1: "LockDoesNotExist",
		2: "InvalidLockKey",
		3: "LockWaitTimeout",
		4: "NotLocked",
		5: "LockDoesNotExistOrInvalidKey",
		6: "LockSizeMismatch",
		7: "InvalidLockSize",
	}
	ErrorCode_value = map[string]int32{
		"Unknown":                      0,
		"LockDoesNotExist":             1,
		"InvalidLockKey":               2,
		"LockWaitTimeout":              3,
		"NotLocked":                    4,
		"LockDoesNotExistOrInvalidKey": 5,
		"LockSizeMismatch":             6,
		"InvalidLockSize":              7,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_ldlm_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_ldlm_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_ldlm_proto_rawDescGZIP(), []int{0}
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=ldlm.ErrorCode" json:"code,omitempty"`
	Message string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_ldlm_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_ldlm_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_ldlm_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_Unknown
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type LockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	WaitTimeoutSeconds *int32 `protobuf:"varint,3,opt,name=wait_timeout_seconds,json=waitTimeoutSeconds,proto3,oneof" json:"wait_timeout_seconds,omitempty"`
	LockTimeoutSeconds *int32 `protobuf:"varint,100,opt,name=lock_timeout_seconds,json=lockTimeoutSeconds,proto3,oneof" json:"lock_timeout_seconds,omitempty"`
	Size               *int32 `protobuf:"varint,4,opt,name=size,proto3,oneof" json:"size,omitempty"`
}

func (x *LockRequest) Reset() {
	*x = LockRequest{}
	mi := &file_ldlm_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockRequest) ProtoMessage() {}

func (x *LockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ldlm_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockRequest.ProtoReflect.Descriptor instead.
func (*LockRequest) Descriptor() ([]byte, []int) {
	return file_ldlm_proto_rawDescGZIP(), []int{1}
}

func (x *LockRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LockRequest) GetWaitTimeoutSeconds() int32 {
	if x != nil && x.WaitTimeoutSeconds != nil {
		return *x.WaitTimeoutSeconds
	}
	return 0
}

func (x *LockRequest) GetLockTimeoutSeconds() int32 {
	if x != nil && x.LockTimeoutSeconds != nil {
		return *x.LockTimeoutSeconds
	}
	return 0
}

func (x *LockRequest) GetSize() int32 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

type TryLockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LockTimeoutSeconds *int32 `protobuf:"varint,100,opt,name=lock_timeout_seconds,json=lockTimeoutSeconds,proto3,oneof" json:"lock_timeout_seconds,omitempty"`
	Size               *int32 `protobuf:"varint,4,opt,name=size,proto3,oneof" json:"size,omitempty"`
}

func (x *TryLockRequest) Reset() {
	*x = TryLockRequest{}
	mi := &file_ldlm_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TryLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TryLockRequest) ProtoMessage() {}

func (x *TryLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ldlm_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TryLockRequest.ProtoReflect.Descriptor instead.
func (*TryLockRequest) Descriptor() ([]byte, []int) {
	return file_ldlm_proto_rawDescGZIP(), []int{2}
}

func (x *TryLockRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TryLockRequest) GetLockTimeoutSeconds() int32 {
	if x != nil && x.LockTimeoutSeconds != nil {
		return *x.LockTimeoutSeconds
	}
	return 0
}

func (x *TryLockRequest) GetSize() int32 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

type LockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locked bool   `protobuf:"varint,1,opt,name=locked,proto3" json:"locked,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Key    string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Error  *Error `protobuf:"bytes,4,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *LockResponse) Reset() {
	*x = LockResponse{}
	mi := &file_ldlm_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockResponse) ProtoMessage() {}

func (x *LockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ldlm_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockResponse.ProtoReflect.Descriptor instead.
func (*LockResponse) Descriptor() ([]byte, []int) {
	return file_ldlm_proto_rawDescGZIP(), []int{3}
}

func (x *LockResponse) GetLocked() bool {
	if x != nil {
		return x.Locked
	}
	return false
}

func (x *LockResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LockResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LockResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type UnlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Key  string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *UnlockRequest) Reset() {
	*x = UnlockRequest{}
	mi := &file_ldlm_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockRequest) ProtoMessage() {}

func (x *UnlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ldlm_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockRequest.ProtoReflect.Descriptor instead.
func (*UnlockRequest) Descriptor() ([]byte, []int) {
	return file_ldlm_proto_rawDescGZIP(), []int{4}
}

func (x *UnlockRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnlockRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type UnlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unlocked bool   `protobuf:"varint,1,opt,name=unlocked,proto3" json:"unlocked,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Error    *Error `protobuf:"bytes,3,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *UnlockResponse) Reset() {
	*x = UnlockResponse{}
	mi := &file_ldlm_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockResponse) ProtoMessage() {}

func (x *UnlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ldlm_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockResponse.ProtoReflect.Descriptor instead.
func (*UnlockResponse) Descriptor() ([]byte, []int) {
	return file_ldlm_proto_rawDescGZIP(), []int{5}
}

func (x *UnlockResponse) GetUnlocked() bool {
	if x != nil {
		return x.Unlocked
	}
	return false
}

func (x *UnlockResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnlockResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type RenewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Key                string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	LockTimeoutSeconds int32  `protobuf:"varint,100,opt,name=lock_timeout_seconds,json=lockTimeoutSeconds,proto3" json:"lock_timeout_seconds,omitempty"`
}

func (x *RenewRequest) Reset() {
	*x = RenewRequest{}
	mi := &file_ldlm_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewRequest) ProtoMessage() {}

func (x *RenewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ldlm_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewRequest.ProtoReflect.Descriptor instead.
func (*RenewRequest) Descriptor() ([]byte, []int) {
	return file_ldlm_proto_rawDescGZIP(), []int{6}
}

func (x *RenewRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RenewRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RenewRequest) GetLockTimeoutSeconds() int32 {
	if x != nil {
		return x.LockTimeoutSeconds
	}
	return 0
}

var File_ldlm_proto protoreflect.FileDescriptor

var file_ldlm_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6c, 0x64, 0x6c, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6c, 0x64,
	0x6c, 0x6d, 0x22, 0x46, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6c, 0x64, 0x6c, 0x6d,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x0b, 0x4c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35,
	0x0a, 0x14, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x12,
	0x77, 0x61, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x14, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x12, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x88, 0x01, 0x01, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x42, 0x17,
	0x0a, 0x15, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x22, 0x96, 0x01, 0x0a, 0x0e, 0x54, 0x72, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x14, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x12, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x7e, 0x0a, 0x0c, 0x4c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6c, 0x64, 0x6c, 0x6d, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x35, 0x0a, 0x0d, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x22, 0x72, 0x0a, 0x0e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x6c, 0x64, 0x6c, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x66, 0x0a, 0x0c, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x2a, 0xb3, 0x01, 0x0a,
	0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4c, 0x6f, 0x63, 0x6b, 0x44,
	0x6f, 0x65, 0x73, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x4b, 0x65, 0x79, 0x10,
	0x02, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x69, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x4c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x10, 0x04, 0x12, 0x20, 0x0a, 0x1c, 0x4c, 0x6f, 0x63, 0x6b, 0x44, 0x6f, 0x65,
	0x73, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x49, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x4b, 0x65, 0x79, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x4c, 0x6f, 0x63, 0x6b, 0x53,
	0x69, 0x7a, 0x65, 0x4d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x10, 0x06, 0x12, 0x13, 0x0a,
	0x0f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65,
	0x10, 0x07, 0x32, 0xd8, 0x01, 0x0a, 0x04, 0x4c, 0x44, 0x4c, 0x4d, 0x12, 0x2f, 0x0a, 0x04, 0x4c,
	0x6f, 0x63, 0x6b, 0x12, 0x11, 0x2e, 0x6c, 0x64, 0x6c, 0x6d, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6c, 0x64, 0x6c, 0x6d, 0x2e, 0x4c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x07,
	0x54, 0x72, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x14, 0x2e, 0x6c, 0x64, 0x6c, 0x6d, 0x2e, 0x54,
	0x72, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x6c, 0x64, 0x6c, 0x6d, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x06, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x13, 0x2e,
	0x6c, 0x64, 0x6c, 0x6d, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6c, 0x64, 0x6c, 0x6d, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x05, 0x52, 0x65,
	0x6e, 0x65, 0x77, 0x12, 0x12, 0x2e, 0x6c, 0x64, 0x6c, 0x6d, 0x2e, 0x52, 0x65, 0x6e, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6c, 0x64, 0x6c, 0x6d, 0x2e, 0x4c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ldlm_proto_rawDescOnce sync.Once
	file_ldlm_proto_rawDescData = file_ldlm_proto_rawDesc
)

func file_ldlm_proto_rawDescGZIP() []byte {
	file_ldlm_proto_rawDescOnce.Do(func() {
		file_ldlm_proto_rawDescData = protoimpl.X.CompressGZIP(file_ldlm_proto_rawDescData)
	})
	return file_ldlm_proto_rawDescData
}

var file_ldlm_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ldlm_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_ldlm_proto_goTypes = []any{
	(ErrorCode)(0),         // 0: ldlm.ErrorCode
	(*Error)(nil),          // 1: ldlm.Error
	(*LockRequest)(nil),    // 2: ldlm.LockRequest
	(*TryLockRequest)(nil), // 3: ldlm.TryLockRequest
	(*LockResponse)(nil),   // 4: ldlm.LockResponse
	(*UnlockRequest)(nil),  // 5: ldlm.UnlockRequest
	(*UnlockResponse)(nil), // 6: ldlm.UnlockResponse
	(*RenewRequest)(nil),   // 7: ldlm.RenewRequest
}
var file_ldlm_proto_depIdxs = []int32{
	0, // 0: ldlm.Error.code:type_name -> ldlm.ErrorCode
	1, // 1: ldlm.LockResponse.error:type_name -> ldlm.Error
	1, // 2: ldlm.UnlockResponse.error:type_name -> ldlm.Error
	2, // 3: ldlm.LDLM.Lock:input_type -> ldlm.LockRequest
	3, // 4: ldlm.LDLM.TryLock:input_type -> ldlm.TryLockRequest
	5, // 5: ldlm.LDLM.Unlock:input_type -> ldlm.UnlockRequest
	7, // 6: ldlm.LDLM.Renew:input_type -> ldlm.RenewRequest
	4, // 7: ldlm.LDLM.Lock:output_type -> ldlm.LockResponse
	4, // 8: ldlm.LDLM.TryLock:output_type -> ldlm.LockResponse
	6, // 9: ldlm.LDLM.Unlock:output_type -> ldlm.UnlockResponse
	4, // 10: ldlm.LDLM.Renew:output_type -> ldlm.LockResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_ldlm_proto_init() }
func file_ldlm_proto_init() {
	if File_ldlm_proto != nil {
		return
	}
	file_ldlm_proto_msgTypes[1].OneofWrappers = []any{}
	file_ldlm_proto_msgTypes[2].OneofWrappers = []any{}
	file_ldlm_proto_msgTypes[3].OneofWrappers = []any{}
	file_ldlm_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ldlm_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ldlm_proto_goTypes,
		DependencyIndexes: file_ldlm_proto_depIdxs,
		EnumInfos:         file_ldlm_proto_enumTypes,
		MessageInfos:      file_ldlm_proto_msgTypes,
	}.Build()
	File_ldlm_proto = out.File
	file_ldlm_proto_rawDesc = nil
	file_ldlm_proto_goTypes = nil
	file_ldlm_proto_depIdxs = nil
}
